1. Модель клиент-сервер
2. Отсутсвие состояния (на сервере не хранится информация о состоянии клиента)
3. Кэширование
4. Единообразие интерфейса
5. Слои

________________________________________________________________________________________________________________________
POST - create
GET - list, retrieve
api/v1/post - create, list
api/v1/post/<id/slug> - details, update, delete
PUT, PATCH - update
DELETE - destroy

________________________________________________________________________________________________________________________
#TODO: сделать избранное(лайки)
#TODO: сделать комментарии
#TODO: сделать отдельный сериалайзер для листинга постов
#TODO: Сделать восстановление/смену пароля
#TODO: сделать пояснения к коду
#TODO: сделать пошаговый документ
________________________________________________________________________________________________________________________
Form и ModelForm -> ModelForm(Form)
serializers.Serializer
Разница в том, что в form мы прописываем все поля сами, а modelform он сразу берет все поля нашей модельки
________________________________________________________________________________________________________________________
Откат миграции:
migrate application и название миграции

________________________________________________________________________________________________________________________
action - create,  update, partial_update, destroy, list, retrieve
methods - POST     PUT        PATCH        DELETE   GET    GET

CRUD (CREATE READ UPDATE DELETE)/(CREATE RETRIEVE UPDATE DESTROY)

router.register('posts', PostViewSet)
path('api/v1/', include(router.urls))
POST - api/v1/posts/ - создание
GET - api/v1/posts/ - листинг
GET - api/v1/posts/pk(slug) - детали
PUT/PATCH - api/v1/posts/pk(slug) - изменение
DELETE - api/v1/posts/pk(slug) - удаление

________________________________________________________________________________________________________________________
Аутентификация - BasicAuth - username/password
                 TokenAuth - токен ключ. Для поддтверждения ключ Authorization: { token: 'awawkdkj8j2380129302989301239289'}
                 Session - состояние пользователя хранится в сессии